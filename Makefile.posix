#!/usr/bin/make -f

SHELL = /bin/sh

# Direcories
prefix = /usr/local
infodir = ${datarootdir}/info
includedir = ${prefix}/include
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
localstatedir = ${prefix}/var

exec_prefix = ${prefix}
guileextensiondir = ${exec_prefix}/lib/guile/
guileobjectdir = ${exec_prefix}/lib/guile//site-ccache
sbindir = ${exec_prefix}/sbin
bindir = ${exec_prefix}/bin

datarootdir = ${prefix}/share
localedir = ${datarootdir}/locale
mandir = ${datarootdir}/man

docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
psdir = ${docdir}

datadir = ${datarootdir}
guilesitedir = $(datadir)/guile/site/
pkgdatadir = $(datadir)/guile-gi

libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
pkglibdir = $(libdir)/guile-gi
pkglibexecdir = $(libexecdir)/guile-gi

pkgincludedir = $(includedir)/guile-gi

srcdir = .
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
builddir = .
htmldir = ${docdir}
oldincludedir = /usr/include
pdfdir = ${docdir}

abs_builddir = /home/mike/projects/guile-gi
abs_srcdir = /home/mike/projects/guile-gi
abs_top_builddir = /home/mike/projects/guile-gi
abs_top_srcdir = /home/mike/projects/guile-gi

top_builddir = .
top_srcdir = .

# Programs
AWK = gawk
CC = gcc
LINKER = gold
install_DATA = install -c -m 644
install_PROGRAM = install -c
install_SCRIPT = install -c
INSTALL_HEADER = $(INSTALL_DATA)
PKG_CONFIG = /usr/bin/pkg-config
DVIPS = dvips
GUILD = /usr/local/bin/guild-2.2
GUILE = /usr/local/bin/guile-2.2
GUILE_CONFIG =
GUILE_EFFECTIVE_VERSION = 2.2
GUILE_EXTENSION = /usr/local/lib/guile/2.2/extensions
GUILE_SITE = /usr/local/share/guile/site/2.2
GUILE_SITE_CCACHE = /usr/local/lib/guile/2.2/site-ccache

################
# 

all: libguile-gi.so guile-gi fo_gen

#$(BUILT_SOURCES) $(INFO_DEPS) $(LTLIBRARIES) $(PROGRAMS) $(DATA)

INFO_DEPS = $(srcdir)/doc/guile-gi.info
LTLIBRARIES = libguile-gi.so
PROGRAMS = guile-gi fo_gen
DATA = $(dist_guilesite_DATA)
dist_guilesite_DATA = \
  src/gi.scm

################
# Build helper program fo_gen

fo_gen: src/gi/fo_gen.c
	$(CC) -Wall -ggdb -fuse-ld=$(LINKER) -Wl,--gc-sections -Wl,--rosegment -Wl,--compress-debug-sections=none -fPIE -pie -Wl,-z,now -Wl,-z,text -o $@ $< `pkg-config --cflags --libs glib-2.0`

################
# Build guile_gi

DEFS = \
  -DHAVE_CONFIG_H \
  -DSTANDALONE \
  -DG_LOG_DOMAIN=\"GuileGI\"

MORE_WARNINGS = -Wextra -Waggregate-return -Wcast-align		\
  -Werror=missing-include-dirs -Werror=pointer-arith -Wfloat-equal	\
  -Wformat=2 -Winit-self -Wlogical-op -Wmissing-declarations		\
  -Wmissing-include-dirs -Wmissing-prototypes -Wnested-externs		\
  -Wno-missing-field-initializers -Wno-packed -Wno-switch-enum		\
  -Wno-unused-parameter -Wold-style-definition -Wshadow			\
  -Wstrict-prototypes -Wsuggest-attribute=format			\
  -Wsuggest-attribute=malloc -Wsuggest-attribute=noreturn		\
  -Wsuggest-attribute=pure -Wundef -Wuninitialized -Wwrite-strings \
  -fdiagnostics-show-option

CPPFLAGS = \
  -Wall \
  $(DEFS) \
  $(INCLUDES) \
  `pkg-config --cflags-only-I guile-2.2 glib-2.0 gobject-2.0 gobject-introspection-1.0` 

CFLAGS = \
  -Og -pipe -ggdb -std=c11 -fPIC \
  -fvar-tracking \
  -fno-strict-aliasing -fstack-protector	\
  -fstack-protector-strong -fno-semantic-interposition			\
  -fno-omit-frame-pointer -fno-common -fdiagnostics-color=auto \
  `pkg-config --cflags-only-other guile-2.2 glib-2.0 gobject-2.0 gobject-introspection-1.0`

LDFLAGS = \
  `pkg-config --libs-only-L guile-2.2 glib-2.0 gobject-2.0 gobject-introspection-1.0` \
  -Wl,-fuse-ld=$(LINKER)

LIBS = \
  `pkg-config --libs-only-l --libs-only-other guile-2.2 glib-2.0 gobject-2.0 gobject-introspection-1.0`

guile_gi_HEADERS = \
 src/gi/__gi_gobject.h \
 src/gi/gi_gobject.h \
 src/gi/__gi_gvalue.h \
 src/gi/gi_gvalue.h \
 src/gi/__gi_gtype.h \
 src/gi/gi_gtype.h \
 src/gi/__gi_gparamspec.h \
 src/gi/gi_gparamspec.h \
 src/gi/gi_gsignal.h \
 src/gi/gi_giargument.h \
 src/gi/gi_basictype.h \
 src/gi/gir_func.h \
 src/gi/gir_func2.h \
 src/gi/gir_type.h \
 src/gi/gi_signal_closure.h \
 src/gi/__gi_giargument.h

guile_gi_SOURCES = \
 src/gi/__gi_gobject.c \
  src/gi/gi_gobject.c \
 src/gi/__gi_gvalue.c \
 src/gi/gi_gvalue.c \
 src/gi/__gi_gtype.c \
 src/gi/gi_gtype.c \
 src/gi/__gi_gparamspec.c \
 src/gi/gi_gparamspec.c \
 src/gi/gi_gsignal.c \
 src/gi/gi_giargument.c \
 src/gi/gi_basictype.c \
 src/gi/gir_func.c \
 src/gi/gir_func2.c \
 src/gi/gir_type.c \
 src/gi/gi_signal_closure.c \
 src/gi/__gi_giargument.c

guile_gi_OBJECTS = $(guile_gi_SOURCES:.c=.o)

guile-gi$(EXEEXT): $(guile_gi_OBJECTS)
	@rm -f guile-gi$(EXEEXT)
	$(CC) -pie -Wl,-z,now -Wl,-z,text $(LDFLAGS) -o $@ $(guile_gi_OBJECTS) $(LIBS)

libguile-gi.so: $(guile_gi_OBJECTS)
	@rm -r libguile-gi.so
	$(CC) -shared -Wl,-z,defs $(LDFLAGS) -o $@ $(guile_gi_OBJECTS) $(LIBS)

build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = .

DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(CONFIGURE_DEPS) $(dist_guilesite_DATA) \
	$(top_srcdir)/build-aux/test-driver \
	$(top_srcdir)/build-aux/texinfo.tex \
	AUTHORS COPYING ChangeLog \
	NEWS build-aux/texinfo.tex

CONFIG_HEADER = $(top_builddir)/src/gi/config.h
libgirtest_la_OBJECTS = test/libgirtest_la-GirtestTriv.lo

depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES)  \
	  $(CFLAGS)
CCLD = $(CC)
SOURCES = $(libgirtest_la_SOURCES) \
	fo_gen.c $(guile_gi_SOURCES)
DIST_SOURCES = $(libgirtest_la_SOURCES) \
	fo_gen.c $(guile_gi_SOURCES)
TEXINFO_TEX = $(top_srcdir)/build-aux/texinfo.tex
DVIS = doc/guile-gi.dvi
HTMLS = doc/guile-gi.html
TEXINFOS = doc/guile-gi.texi
TEXI2DVI = texi2dvi
MAKEINFOHTML = $(MAKEINFO) --html
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
ETAGS = etags
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
CREATE_GLOBAL_LOG = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /^[ 	]*:global-test-result:[ 	]*/) \
        { \
          sub("^[ 	]*:global-test-result:[ 	]*", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /^[ 	]*:copy-in-global-log:[ 	]*[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac; \
;					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.scm.log=.log)
SCM_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
SCM_LOG_COMPILE = $(SCM_LOG_COMPILER)  \
	$(SCM_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/mike/projects/guile-gi/build-aux/missing aclocal-1.15
AM_DEFAULT_VERBOSITY = 1
CCDEPMODE = depmode=gcc3
CPP = gcc -E
CYGPATH_W = echo
DLLTOOL = false
ECHO_C =
ECHO_N = -n
ECHO_T =
EGREP = /usr/bin/grep -E
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = install -c -s
INTROSPECTION_CFLAGS = -I/usr/include/gobject-introspection-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -pthread
INTROSPECTION_COMPILER = /usr/bin/g-ir-compiler
INTROSPECTION_GENERATE = /usr/bin/g-ir-generate
INTROSPECTION_GIRDIR = /usr/share/gir-1.0
INTROSPECTION_LIBS = -lgirepository-1.0 -lgobject-2.0 -lglib-2.0
INTROSPECTION_MAKEFILE = /usr/share/gobject-introspection-1.0/Makefile.introspection
INTROSPECTION_SCANNER = /usr/bin/g-ir-scanner
INTROSPECTION_TYPELIBDIR = /usr/lib64/girepository-1.0
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =
LIBGUILE_GI_INTERFACE = 0:0:0
LIBOBJS =
LIPO =
LN_S = ln -s
LTLIBOBJS =
LT_SYS_LIBRARY_PATH =
MAINT = #
MAKEINFO = ${SHELL} /home/mike/projects/guile-gi/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT =
OBJDUMP = objdump
OBJEXT = o
OTOOL =
OTOOL64 =
PACKAGE = guile-gi
PACKAGE_BUGREPORT = spk121@yahoo.com
PACKAGE_NAME = Guile GI
PACKAGE_STRING = Guile GI 0.0.1
PACKAGE_TARNAME = guile-gi
PACKAGE_URL =
PACKAGE_VERSION = 0.0.1
PATH_SEPARATOR = :
PKG_CONFIG_LIBDIR =
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE =
STRIP = strip
VERSION = 0.0.1
build = x86_64-pc-linux-gnu
build_alias =
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
host = x86_64-pc-linux-gnu
host_alias =
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
install_sh = ${SHELL} /home/mike/projects/guile-gi/build-aux/install-sh
mkdir_p = $(MKDIR_P)
target_alias =
top_build_prefix =

#        +         +         +         +         +         +         +         |
ACLOCAL_AMFLAGS = -I m4 ${ACLOCAL_FLAGS}
DISTCHECK_CONFIGURE_FLAGS = --enable-introspection
CLEANFILES = $($(check_DATA))
BUILT_SOURCES = docs/index.html src/gi/__gi_gboxed.h \
	src/gi/__gi_gboxed.c src/gi/__gi_genum.h src/gi/__gi_genum.c \
	src/gi/__gi_genumcollection.h src/gi/__gi_genumcollection.c \
	src/gi/__gi_gflags.h src/gi/__gi_gflags.c \
	src/gi/__gi_gflagscollection.h src/gi/__gi_gflagscollection.c \
	src/gi/__gi_gobject.h src/gi/__gi_gobject.c \
	src/gi/__gi_gtype.h src/gi/__gi_gtype.c src/gi/__gi_gvalue.h \
	src/gi/__gi_gvalue.c src/gi/__gi_gparamspec.h \
	src/gi/__gi_gparamspec.c src/gi/__gi_giargument.h \
	src/gi/__gi_giargument.c
info_TEXINFOS = doc/guile-gi.texi


# src/gi/__gi_gboxed.h src/gi/__gi_gboxed.c \
# # src/gi/gi_gboxed.h src/gi/gi_gboxed.c \
# # src/gi/__gi_genum.h src/gi/__gi_genum.c \
# # src/gi/gi_genum.h src/gi/gi_genum.c \
# # scr/gi/__gi_genumcollection.h src/gi/__gi_genumcollection.c \
# # src/gi/__gi_gflags.h src/gi/__gi_gflags.c \
# # src/gi/gi_gflags.h src/gi/gi_gflags.c \
# # src/gi/__gi_gflagscollection.h src/gi/__gi_gflagscollection.c \
# # src/gi/gi_gvalue.h src/gi/gi_gvalue.c \
# # src/gi/stubs.c \
# # src/gi/pycompat.c \
# # src/gi/gir_xguile.c src/gi/gir_xguile.h \
# # src/gi/gir_g_type.c \
# # src/gi/gir_g_value.c \
# # src/gi/gir-object.c src/gi/gir-object.h \
# # src/gi/gir_ginterface.c src/gi/gir_ginterface.h \
# # src/gi/gimodule.c src/gi/gimodule.h \
# # src/gi/gi_util.c src/gi/gi_util.h

# src/gi/gimodule.c
# src/gi/gugobject.c

# src/gi/gugobject-object.c \
# src/gi/gugi-object.c

guile_gi_LDFLAGS = -no-undefined

libguile_gi_la_CFLAGS = \
  -std=c11 \
  $(GUILE_CFLAGS) \
  $(GLIB_CFLAGS) \
  $(GOBJECT_CFLAGS) \
  $(GOBJECT_INTROSPECTION_CFLAGS) \
  -DG_LOG_DOMAIN=\"GuileGI\"

libguile_gi_la_LDFLAGS = -no-undefined -version-info 0:0:0
libguile_gi_la_LIBADD = $(GUILE_LIBS) $(GOBJECT_INTROSPECTION_LIBS) $(GLIB_LIBS) $(GOBJECT_LIBS)


################################################################
# Set up the test libraries that we will use for testing
check_LTLIBRARIES = libgirtest.so
libgirtest_la_SOURCES = \
 test/girtest.h \
 test/GirtestTriv.c test/GirtestTriv.h

libgirtest_la_CFLAGS = \
  \
 $(GLIB_CFLAGS)


#libgirtest_la_LDFLAGS = -no-undefined Wl,--no-undefined
libgirtest_la_LDFLAGS = -Wl,--no-as-needed -no-undefined -no-install
libgirtest_la_LIBADD = $(GLIB_LIBS)
INTROSPECTION_GIRS = $(Girtest-1.0.gir)
INTROSPECTION_SCANNER_ARGS = --add-include-path=$(top_srcdir)/test --warn-all
INTROSPECTION_COMPILER_ARGS = --includedir=$(top_srcdir)/test
introspection_sources = $(libgirtest_la_SOURCES)
Girtest_1_0_gir_INCLUDES = GObject-2.0
Girtest_1_0_gir_CFLAGS = $(INCLUDES)
Girtest_1_0_gir_LIBS = libgirtest.so
Girtest_1_0_gir_FILES = $(introspection_sources)
check_DATA = $(INTROSPECTION_GIRS) $(INTROSPECTION_GIRS:.gir=.typelib)

################################################################
# Test driver

# TEST_LOG_DRIVER = env AM_TAP_AWK='$(AWK)' GUILE_AUTO_COMPILE=0 $(SHELL) \
#                   $(top_srcdir)/build-aux/tap-driver.sh
AM_TESTS_ENVIRONMENT = LD_LIBRARY_PATH="$(top_builddir)/.libs"; export LD_LIBRARY_PATH;
TESTS = \
 test/test-setup.scm \
 test/test-gobject.scm \
 test/test-glib.scm \
 test/test-gvalue.scm

TEST_EXTENSIONS = .scm
AM_SCM_LOG_FLAGS = --no-auto-compile -L ${top_srcdir}/src -L ${top_srcdir}/test/. -s
SCM_LOG_COMPILER = $(top_builddir)/guile-gi
# AM_SCM_LOG_FLAGS = --no-auto-compile -L $(top_srcdir)/src
EXTRA_DIST = \
  $(TESTS) \
  COPYING \
  bootstrap.sh \
  docs/document-1.0.1.css

MAINTAINERCLEANFILES = \
  docs/*.html

.SUFFIXES:
.SUFFIXES: .c .dvi .lo .log .o .obj .ps .scm .scm$(EXEEXT) .trs

distclean-hdr:
	-rm -f src/gi/config.h src/gi/stamp-h1

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}


clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list


mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/gi/*.$(OBJEXT)
	-rm -f src/gi/*.lo
	-rm -f test/*.$(OBJEXT)
	-rm -f test/*.lo

distclean-compile:
	-rm -f *.tab.c


doc/.dirstamp:
	@$(MKDIR_P) doc
	@: > doc/.dirstamp

$(srcdir)/doc/guile-gi.info: doc/guile-gi.texi
	restore=: && backupdir=".am$$$$" && \
	am__cwd=`pwd` && cd $(srcdir) && \
	rm -rf $$backupdir && mkdir $$backupdir && \
	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
	  done; \
	else :; fi && \
	cd "$$am__cwd"; \
	if $(MAKEINFO) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc \
	 -o $@ $(srcdir)/doc/guile-gi.texi; \
	then \
	  rc=0; \
	  cd $(srcdir); \
	else \
	  rc=$$?; \
	  cd $(srcdir) && \
	  $$restore $$backupdir/* `echo "./$@" | sed 's|[^/]*$$||'`; \
	fi; \
	rm -rf $$backupdir; exit $$rc

doc/guile-gi.dvi: doc/guile-gi.texi  doc/.dirstamp
	TEXINPUTS="$(top_srcdir)/build-aux$(PATH_SEPARATOR)$$TEXINPUTS" \
	MAKEINFO='$(MAKEINFO) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc' \
	$(TEXI2DVI)  --build-dir=$(@:.dvi=.t2d) -o $@  \
	`test -f 'doc/guile-gi.texi' || echo '$(srcdir)/'`doc/guile-gi.texi

doc/guile-gi.html: doc/guile-gi.texi  doc/.dirstamp
	rm -rf $(@:.html=.htp)
	if $(MAKEINFOHTML) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc \
	 -o $(@:.html=.htp) `test -f 'doc/guile-gi.texi' || echo '$(srcdir)/'`doc/guile-gi.texi; \
	then \
	  rm -rf $@ && mv $(@:.html=.htp) $@; \
	else \
	  rm -rf $(@:.html=.htp); exit 1; \
	fi
.dvi.ps:
	TEXINPUTS="$(top_srcdir)/build-aux$(PATH_SEPARATOR)$$TEXINPUTS" \
	$(DVIPS)  -o $@ $<

uninstall-dvi-am:
	@list='$(DVIS)'; test -n "$(dvidir)" || list=; \
	for p in $$list; do \
	f=`echo $$p | sed -e 's|^.*/||'`; \
	  echo " rm -f '$(DESTDIR)$(dvidir)/$$f'"; \
	  rm -f "$(DESTDIR)$(dvidir)/$$f"; \
	done

uninstall-html-am:
	@list='$(HTMLS)'; test -n "$(htmldir)" || list=; \
	for p in $$list; do \
	f=`echo $$p | sed -e 's|^.*/||'`; \
	  echo " rm -rf '$(DESTDIR)$(htmldir)/$$f'"; \
	  rm -rf "$(DESTDIR)$(htmldir)/$$f"; \
	done

uninstall-info-am:
	@if test -d '$(DESTDIR)$(infodir)' &&   case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac \
; then \
	  list='$(INFO_DEPS)'; \
	  for file in $$list; do \
	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
	    echo " install-info --info-dir='$(DESTDIR)$(infodir)' --remove '$(DESTDIR)$(infodir)/$$relfile'"; \
	    if install-info --info-dir="$(DESTDIR)$(infodir)" --remove "$(DESTDIR)$(infodir)/$$relfile"; \
	    then :; else test ! -f "$(DESTDIR)$(infodir)/$$relfile" || exit 1; fi; \
	  done; \
	else :; fi
	@list='$(INFO_DEPS)'; \
	for file in $$list; do \
	  relfile=`echo "$$file" | sed 's|^.*/||'`; \
	  relfile_i=`echo "$$relfile" | sed 's|\.info$$||;s|$$|.i|'`; \
	  (if test -d "$(DESTDIR)$(infodir)" && cd "$(DESTDIR)$(infodir)"; then \
	     echo " cd '$(DESTDIR)$(infodir)' && rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]"; \
	     rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]; \
	   else :; fi); \
	done

dist-info: $(INFO_DEPS)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(INFO_DEPS)'; \
	for base in $$list; do \
	  case $$base in \
	    $(srcdir)/*) base=`echo "$$base" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
	  base_i=`echo "$$base" | sed 's|\.info$$||;s|$$|.i|'`; \
	  for file in $$d/$$base $$d/$$base-[0-9] $$d/$$base-[0-9][0-9] $$d/$$base_i[0-9] $$d/$$base_i[0-9][0-9]; do \
	    if test -f $$file; then \
	      relfile=`expr "$$file" : "$$d/\(.*\)"`; \
	      test -f "$(distdir)/$$relfile" || \
		cp -p $$file "$(distdir)/$$relfile"; \
	    else :; fi; \
	  done; \
	done

mostlyclean-aminfo:
	-rm -rf doc/guile-gi.t2d doc/guile-gi.t2p

clean-aminfo:
	-test -z "doc/guile-gi.dvi doc/guile-gi.pdf doc/guile-gi.ps doc/guile-gi.html" \
	|| rm -rf doc/guile-gi.dvi doc/guile-gi.pdf doc/guile-gi.ps doc/guile-gi.html

maintainer-clean-aminfo:
	@list='$(INFO_DEPS)'; for i in $$list; do \
	  i_i=`echo "$$i" | sed 's|\.info$$||;s|$$|.i|'`; \
	  echo " rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]"; \
	  rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]; \
	done
install-dist_guilesiteDATA: $(dist_guilesite_DATA)
	@list='$(dist_guilesite_DATA)'; test -n "$(guilesitedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(guilesitedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(guilesitedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done |   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g' \
 | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(guilesitedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(guilesitedir)" || exit $$?; \
	done

uninstall-dist_guilesiteDATA:
	@list='$(dist_guilesite_DATA)'; test -n "$(guilesitedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(guilesitedir)';  { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         cd "$$dir" && rm -f $$files; }; \
  }

ID: $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
	  list='$(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'` \
; mkid -fID $$unique

TAGS: tags

tags: $(TAGS_DEPENDENCIES) $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	  list='$(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'` \
; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
distclean-tags:
	-rm -f TAGS ID GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	make  $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes make  $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(CREATE_GLOBAL_LOG);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	make  $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_LTLIBRARIES) $(check_DATA)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	|  $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /^[ 	]*:recheck:[ 	]*[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /^[ 	]*:recheck:[ 	]*[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'` || exit1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	make  $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.scm.log:
	@p='$<'; \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac \
	$(am__check_pre) $(SCM_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SCM_LOG_DRIVER_FLAGS) $(SCM_LOG_DRIVER_FLAGS) -- $(SCM_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.scm$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(SCM_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_SCM_LOG_DRIVER_FLAGS) $(SCM_LOG_DRIVER_FLAGS) -- $(SCM_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@case `sed 15q $(srcdir)/NEWS` in \
	*"$(VERSION)"*) : ;; \
	*) \
	  echo "NEWS not updated; not releasing" 1>&2; \
	  exit 1;; \
	esac \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi \
		test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	make  \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-info
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec install -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"

dist-gzip: distdir
	tardir=$(distdir) && tar chof - "$$tardir" | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	rm -rf $(distdir)

dist dist-all: dist-gzip

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | tar xf - ;
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`cd $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && cd $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && make  \
	  && make  dvi \
	  && make  check \
	  && make  install \
	  && make  installcheck \
	  && make  uninstall \
	  && make  distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && make  DESTDIR="$$dc_destdir" install \
	       && make  DESTDIR="$$dc_destdir" uninstall \
	       && make  DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && make  dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && make  distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	cd '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	make  $(check_LTLIBRARIES) $(check_DATA)
	make  check-TESTS
check: $(BUILT_SOURCES)
	make  check-am
installdirs:
	for dir in "$(DESTDIR)$(guileextensiondir)" "$(DESTDIR)$(infodir)" "$(DESTDIR)$(guilesitedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	make  install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@make  install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  make  INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  make  INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f doc/.dirstamp
	-rm -f src/gi/$(DEPDIR)/.dirstamp
	-rm -f src/gi/.dirstamp
	-rm -f test/$(DEPDIR)/.dirstamp
	-rm -f test/.dirstamp

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-aminfo clean-checkLTLIBRARIES clean-generic \
	clean-guileextensionLTLIBRARIES  \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(CONFIG_DISTCLEAN_FILES)
	-rm -rf src/gi/$(DEPDIR) test/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr  distclean-tags

dvi: dvi-am

dvi-am: $(DVIS)

html: html-am

html-am: $(HTMLS)

info: info-am

info-am: $(INFO_DEPS)

install-data-am: install-dist_guilesiteDATA \
	install-guileextensionLTLIBRARIES install-info-am

install-dvi: install-dvi-am

install-dvi-am: $(DVIS)
	@list='$(DVIS)'; test -n "$(dvidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dvidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dvidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done |   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g' \
 | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dvidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dvidir)" || exit $$?; \
	done
install-exec-am:

install-html: install-html-am

install-html-am: $(HTMLS)
	@list='$(HTMLS)'; list2=; test -n "$(htmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(htmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(htmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p" || test -d "$$p"; then d=; else d="$(srcdir)/"; fi; \
	f=`echo $$p | sed -e 's|^.*/||'`; \
	  d2=$$d$$p; \
	  if test -d "$$d2"; then \
	    echo " $(MKDIR_P) '$(DESTDIR)$(htmldir)/$$f'"; \
	    $(MKDIR_P) "$(DESTDIR)$(htmldir)/$$f" || exit 1; \
	    echo " $(INSTALL_DATA) '$$d2'/* '$(DESTDIR)$(htmldir)/$$f'"; \
	    $(INSTALL_DATA) "$$d2"/* "$(DESTDIR)$(htmldir)/$$f" || exit $$?; \
	  else \
	    list2="$$list2 $$d2"; \
	  fi; \
	done; \
	test -z "$$list2" || { echo "$$list2" |   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g' \
 | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(htmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(htmldir)" || exit $$?; \
	done; }
install-info: install-info-am

install-info-am: $(INFO_DEPS)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(INFO_DEPS)'; test -n "$(infodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(infodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(infodir)" || exit 1; \
	fi; \
	for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  file_i=`echo "$$file" | sed 's|\.info$$||;s|$$|.i|'`; \
	  for ifile in $$d/$$file $$d/$$file-[0-9] $$d/$$file-[0-9][0-9] \
	               $$d/$$file_i[0-9] $$d/$$file_i[0-9][0-9] ; do \
	    if test -f $$ifile; then \
	      echo "$$ifile"; \
	    else : ; fi; \
	  done; \
	done |   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g' \
 | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(infodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(infodir)" || exit $$?; done
	@if   case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac \
; then \
	  list='$(INFO_DEPS)'; test -n "$(infodir)" || list=; \
	  for file in $$list; do \
	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
	    echo " install-info --info-dir='$(DESTDIR)$(infodir)' '$(DESTDIR)$(infodir)/$$relfile'";\
	    install-info --info-dir="$(DESTDIR)$(infodir)" "$(DESTDIR)$(infodir)/$$relfile" || :;\
	  done; \
	else : ; fi

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(CONFIG_DISTCLEAN_FILES)
	-rm -rf src/gi/$(DEPDIR) test/$(DEPDIR)

maintainer-clean-am: distclean-am maintainer-clean-aminfo \
	maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-aminfo mostlyclean-compile \
	mostlyclean-generic

################
# PDF Files
TEXI2PDF = $(TEXI2DVI) --pdf --batch
PDFS = doc/guile-gi.pdf

doc/guile-gi.pdf: doc/guile-gi.texi  doc/.dirstamp
	TEXINPUTS="$(top_srcdir)/build-aux$(PATH_SEPARATOR)$$TEXINPUTS" \
	MAKEINFO='$(MAKEINFO) $(MAKEINFOFLAGS) -I doc -I $(srcdir)/doc' \
	$(TEXI2PDF)  --build-dir=$(@:.pdf=.t2p) -o $@  \
	`test -f 'doc/guile-gi.texi' || echo '$(srcdir)/'`doc/guile-gi.texi

pdf: $(PDFS)

install-pdf: $(PDFS)
	@list='$(PDFS)'; test -n "$(pdfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pdfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pdfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done |   sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g' \
 | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pdfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pdfdir)" || exit $$?; done

uninstall-pdf:
	@list='$(PDFS)'; test -n "$(pdfdir)" || list=; \
	for p in $$list; do \
	f=`echo $$p | sed -e 's|^.*/||'`; \
	  echo " rm -f '$(DESTDIR)$(pdfdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pdfdir)/$$f"; \
	done

################


uninstall-am: uninstall-dist_guilesiteDATA uninstall-dvi-am \
	uninstall-guileextensionLTLIBRARIES uninstall-html-am \
	uninstall-info-am uninstall-pdf

.MAKE: all check check-am install install-am install-strip

.PHONY: TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-aminfo clean-checkLTLIBRARIES \
	clean-generic clean-guileextensionLTLIBRARIES \
	 clean-noinstPROGRAMS \
	dist dist-all dist-bzip2 dist-gzip dist-info \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	 distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-dist_guilesiteDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-guileextensionLTLIBRARIES \
	install-html install-html-am install-info install-info-am \
	install-pdf install-pdf-am \
	install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-aminfo \
	maintainer-clean-generic mostlyclean mostlyclean-aminfo \
	mostlyclean-compile mostlyclean-generic \
	pdf pdf-am recheck tags uninstall \
	uninstall-am uninstall-dist_guilesiteDATA uninstall-dvi-am \
	uninstall-guileextensionLTLIBRARIES uninstall-html-am \
	uninstall-info-am uninstall-pdf uninstall-ps-am

.PRECIOUS: Makefile


src/gi/__gi_gboxed.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gboxed.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_genum.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_genum.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_genumcollection.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_genumcollection.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gflags.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gflags.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gflagscollection.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gflagscollection.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gobject.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gobject.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gtype.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gtype.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gvalue.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gvalue.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gparamspec.h: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_gparamspec.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
src/gi/__gi_giargument.c: $(builddir)/fo_gen$(EXEEXT) src/gi/foreign-object-types.ini
	$(builddir)/fo_gen$(EXEEXT) $(top_srcdir)/src/gi/foreign-object-types.ini $(top_srcdir)/src/gi

# Build ChangeLog from GIT  history
dist: ChangeLog
.PHONY: ChangeLog
ChangeLog:
	if test -d $(top_srcdir)/.git; then \
		GIT_DIR="$(top_srcdir)/.git" git log --stat > $@; \
	fi

docs/index.html: doc/guile-gi.texi
	texi2any $< --css-ref=document-1.0.1.css --html -o docs

################################################################
# GObject Introspection of test libraries

# -include $(INTROSPECTION_MAKEFILE)

Girtest-1.0.gir: libgirtest.so

################################################################
# FLYMAKE

.PHONY: check-syntax
check-syntax:
	$(CC)  -std=c11 $(GUILE_CFLAGS) $(GLIB_CFLAGS) $(GOBJECT_CFLAGS) \
	 $(GOBJECT_INTROSPECTION_CFLAGS) \
	 -DGUILE_GI_CORE -DG_LOG_DOMAIN=\"GuileGI\" $(CFLAGS) -fsyntax-only $(CHK_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
